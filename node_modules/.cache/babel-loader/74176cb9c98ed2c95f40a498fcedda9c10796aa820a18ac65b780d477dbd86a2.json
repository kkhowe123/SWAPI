{"ast":null,"code":"var _jsxFileName = \"/home/keanu/Downloads/projects/SWAPI/src/components/PeopleDetails.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CardDetails from './CardDetails';\nimport AllCardsDetailsView from \"./AllCardsDetailsView\";\nimport Pagination from \"./Pagination\";\nimport pageLoader from \"../assets/loader.gif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PeopleDetails = ({\n  search\n}) => {\n  _s();\n  const [peopleData, setPeopleData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const [morePagesStatus, setMorePagesStatus] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        let allPeopleData = [];\n        for (let i = 1; i <= totalPages; i++) {\n          const response = await fetch(`https://swapi.dev/api/people/?page=${i}`);\n          const data = await response.json();\n          allPeopleData = [...allPeopleData, ...data.results];\n        }\n        setPeopleData(allPeopleData);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [totalPages]);\n  useEffect(() => {\n    const fetchTotalPages = async () => {\n      try {\n        const response = await fetch(\"https://swapi.dev/api/people/\");\n        const data = await response.json();\n        const totalPeopleCount = data.count;\n        setTotalPages(Math.ceil(totalPeopleCount / 10)); // Assuming 10 items per page\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchTotalPages();\n  }, []);\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const setPage = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"ml-[500px] mt-[100px]\",\n        src: pageLoader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [peopleData.filter(person => person.name.toLowerCase().includes(search.toLowerCase())).map(person => /*#__PURE__*/_jsxDEV(AllCardsDetailsView, {\n        name: person.name,\n        birth_year: person.birth_year,\n        species: person.species,\n        homeworld: person.homeworld,\n        vehicles: person.vehicles,\n        starships: person.starship,\n        gender: person.gender\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          setPageValue: setPage,\n          nextPage: nextPage,\n          prevPage: prevPage,\n          currentPage: currentPage,\n          totalPages: totalPages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(PeopleDetails, \"Fs2Lgu2BFdXDNw2TWzIyuttkWM0=\");\n_c = PeopleDetails;\nexport default PeopleDetails;\nvar _c;\n$RefreshReg$(_c, \"PeopleDetails\");","map":{"version":3,"names":["useEffect","useState","CardDetails","AllCardsDetailsView","Pagination","pageLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","PeopleDetails","search","_s","peopleData","setPeopleData","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","error","setError","morePagesStatus","setMorePagesStatus","fetchData","allPeopleData","i","response","fetch","data","json","results","fetchTotalPages","totalPeopleCount","count","Math","ceil","nextPage","prevPage","setPage","page","children","className","src","fileName","_jsxFileName","lineNumber","columnNumber","filter","person","name","toLowerCase","includes","map","birth_year","species","homeworld","vehicles","starships","starship","gender","setPageValue","_c","$RefreshReg$"],"sources":["/home/keanu/Downloads/projects/SWAPI/src/components/PeopleDetails.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport CardDetails from './CardDetails';\nimport AllCardsDetailsView from \"./AllCardsDetailsView\";\nimport Pagination from \"./Pagination\";\nimport pageLoader from \"../assets/loader.gif\";\n\nconst PeopleDetails = ({ search }) => {\n    const [peopleData, setPeopleData] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const [morePagesStatus, setMorePagesStatus] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n\n        const fetchData = async () => {\n            try {\n                let allPeopleData = [];\n\n                for (let i = 1; i <= totalPages; i++) {\n                    const response = await fetch(`https://swapi.dev/api/people/?page=${i}`);\n                    const data = await response.json();\n                    allPeopleData = [...allPeopleData, ...data.results];\n                }\n\n                setPeopleData(allPeopleData);\n                setLoading(false);\n            } catch (error) {\n                setError(error);\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [totalPages]);\n\n    useEffect(() => {\n        const fetchTotalPages = async () => {\n            try {\n                const response = await fetch(\"https://swapi.dev/api/people/\");\n                const data = await response.json();\n                const totalPeopleCount = data.count;\n                setTotalPages(Math.ceil(totalPeopleCount / 10)); // Assuming 10 items per page\n            } catch (error) {\n                setError(error);\n            }\n        };\n\n        fetchTotalPages();\n    }, []);\n\n    const nextPage = () => {\n        if (currentPage < totalPages) {\n            setCurrentPage(currentPage + 1);\n        }\n    };\n\n    const prevPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    };\n\n    const setPage = (page) => {\n        setCurrentPage(page);\n    };\n\n    return (\n        <>\n            {loading ? (\n                <div>\n                    <img className=\"ml-[500px] mt-[100px]\" src={pageLoader} />\n                </div>\n            ) : (\n                <>\n                    {peopleData\n                        .filter((person) =>\n                            person.name.toLowerCase().includes(search.toLowerCase())\n                        )\n                        .map((person) => (\n                            <AllCardsDetailsView\n                                key={person.name}\n                                name={person.name}\n                                birth_year={person.birth_year}\n                                species={person.species}\n                                homeworld={person.homeworld}\n                                vehicles={person.vehicles}\n                                starships={person.starship}\n                                gender={person.gender}\n                            />\n                        ))}\n                    <div>\n                        <Pagination\n                            setPageValue={setPage}\n                            nextPage={nextPage}\n                            prevPage={prevPage}\n                            currentPage={currentPage}\n                            totalPages={totalPages}\n                        />\n                    </div>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default PeopleDetails;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACZoB,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIC,aAAa,GAAG,EAAE;QAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIV,UAAU,EAAEU,CAAC,EAAE,EAAE;UAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCF,CAAE,EAAC,CAAC;UACvE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCL,aAAa,GAAG,CAAC,GAAGA,aAAa,EAAE,GAAGI,IAAI,CAACE,OAAO,CAAC;QACvD;QAEAlB,aAAa,CAACY,aAAa,CAAC;QAC5BN,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;QACfD,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDK,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhBjB,SAAS,CAAC,MAAM;IACZ,MAAMiC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMG,gBAAgB,GAAGJ,IAAI,CAACK,KAAK;QACnCjB,aAAa,CAACkB,IAAI,CAACC,IAAI,CAACH,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACrD,CAAC,CAAC,OAAOb,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;MACnB;IACJ,CAAC;IAEDY,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIvB,WAAW,GAAGE,UAAU,EAAE;MAC1BD,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC;EAED,MAAMwB,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIxB,WAAW,GAAG,CAAC,EAAE;MACjBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC;EAED,MAAMyB,OAAO,GAAIC,IAAI,IAAK;IACtBzB,cAAc,CAACyB,IAAI,CAAC;EACxB,CAAC;EAED,oBACIlC,OAAA,CAAAE,SAAA;IAAAiC,QAAA,EACKvB,OAAO,gBACJZ,OAAA;MAAAmC,QAAA,eACInC,OAAA;QAAKoC,SAAS,EAAC,uBAAuB;QAACC,GAAG,EAAEvC;MAAW;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,gBAENzC,OAAA,CAAAE,SAAA;MAAAiC,QAAA,GACK7B,UAAU,CACNoC,MAAM,CAAEC,MAAM,IACXA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC1C,MAAM,CAACyC,WAAW,CAAC,CAAC,CAC3D,CAAC,CACAE,GAAG,CAAEJ,MAAM,iBACR3C,OAAA,CAACJ,mBAAmB;QAEhBgD,IAAI,EAAED,MAAM,CAACC,IAAK;QAClBI,UAAU,EAAEL,MAAM,CAACK,UAAW;QAC9BC,OAAO,EAAEN,MAAM,CAACM,OAAQ;QACxBC,SAAS,EAAEP,MAAM,CAACO,SAAU;QAC5BC,QAAQ,EAAER,MAAM,CAACQ,QAAS;QAC1BC,SAAS,EAAET,MAAM,CAACU,QAAS;QAC3BC,MAAM,EAAEX,MAAM,CAACW;MAAO,GAPjBX,MAAM,CAACC,IAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQnB,CACJ,CAAC,eACNzC,OAAA;QAAAmC,QAAA,eACInC,OAAA,CAACH,UAAU;UACP0D,YAAY,EAAEtB,OAAQ;UACtBF,QAAQ,EAAEA,QAAS;UACnBC,QAAQ,EAAEA,QAAS;UACnBxB,WAAW,EAAEA,WAAY;UACzBE,UAAU,EAAEA;QAAW;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,eACR;EACL,gBACH,CAAC;AAEX,CAAC;AAACpC,EAAA,CApGIF,aAAa;AAAAqD,EAAA,GAAbrD,aAAa;AAsGnB,eAAeA,aAAa;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}