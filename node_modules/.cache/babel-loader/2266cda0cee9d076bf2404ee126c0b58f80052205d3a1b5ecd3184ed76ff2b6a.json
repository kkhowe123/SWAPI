{"ast":null,"code":"var _jsxFileName = \"/home/keanu/Downloads/projects/SWAPI/src/components/PeopleDetails.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CardDetails from './CardDetails';\nimport AllCardsDetailsView from \"./AllCardsDetailsView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PeopleDetails = () => {\n  _s();\n  const [peopleData, setPeopleData] = useState([]);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    fetch('https://swapi.dev/api/people/?page=${currentPage}').then(response => {\n      if (!response.ok) {\n        throw new Error(\"Could not connect to the server\");\n      }\n      return response.json();\n    }).then(data => setPeopleData(data.results), setTotalPages(Math.ceil(response.data.count / 10))).catch(error => setError(error));\n  }, [currentPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: peopleData.map(people => /*#__PURE__*/_jsxDEV(AllCardsDetailsView, {\n      name: people.name,\n      birth_year: people.birth_year,\n      species: people.species,\n      homeworld: people.homeworld,\n      vehicles: people.vehicles,\n      starships: people.starship,\n      gender: people.gender,\n      z: true\n    }, people.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n_s(PeopleDetails, \"kNcTy1xpzfvzAlgV8cC1JVPLvFA=\");\n_c = PeopleDetails;\nexport default PeopleDetails;\nvar _c;\n$RefreshReg$(_c, \"PeopleDetails\");","map":{"version":3,"names":["useEffect","useState","CardDetails","AllCardsDetailsView","jsxDEV","_jsxDEV","Fragment","_Fragment","PeopleDetails","_s","peopleData","setPeopleData","error","setError","currentPage","setCurrentPage","totalPages","setTotalPages","fetch","then","response","ok","Error","json","data","results","Math","ceil","count","catch","children","map","people","name","birth_year","species","homeworld","vehicles","starships","starship","gender","z","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/keanu/Downloads/projects/SWAPI/src/components/PeopleDetails.js"],"sourcesContent":["import { useEffect, useState} from \"react\";\nimport CardDetails from './CardDetails';\nimport AllCardsDetailsView from \"./AllCardsDetailsView\";\n const PeopleDetails = () =>{\n\n    const [peopleData, setPeopleData] = useState([]);\n    const [error, setError] = useState(null);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n\n        useEffect( () =>\n        {\n            fetch('https://swapi.dev/api/people/?page=${currentPage}')\n            .then (response => {\n                if(!response.ok){\n                    throw new Error (\"Could not connect to the server\");\n                }\n                return response.json();\n\n            })\n            .then(data => setPeopleData(data.results),\n            setTotalPages(Math.ceil(response.data.count / 10))) \n            \n            .catch (error => setError(error));\n\n        },[currentPage]);\n        return(\n            <>\n                {peopleData.map((people) => (\n                \n                    <AllCardsDetailsView key={people.name} name={people.name} birth_year ={people.birth_year} species={people.species} homeworld={people.homeworld} vehicles={people.vehicles} starships ={people.starship} gender={people.gender} z/>\n                ))}\n           \n            </>\n        );\n        \n        }\n         export default PeopleDetails"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACvD,MAAMC,aAAa,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE3CD,SAAS,CAAE,MACX;IACIkB,KAAK,CAAC,mDAAmD,CAAC,CACzDC,IAAI,CAAEC,QAAQ,IAAI;MACf,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAE,iCAAiC,CAAC;MACvD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAE1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIb,aAAa,CAACa,IAAI,CAACC,OAAO,CAAC,EACzCR,aAAa,CAACS,IAAI,CAACC,IAAI,CAACP,QAAQ,CAACI,IAAI,CAACI,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAElDC,KAAK,CAAEjB,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAAC,CAAC;EAErC,CAAC,EAAC,CAACE,WAAW,CAAC,CAAC;EAChB,oBACIT,OAAA,CAAAE,SAAA;IAAAuB,QAAA,EACKpB,UAAU,CAACqB,GAAG,CAAEC,MAAM,iBAEnB3B,OAAA,CAACF,mBAAmB;MAAmB8B,IAAI,EAAED,MAAM,CAACC,IAAK;MAACC,UAAU,EAAGF,MAAM,CAACE,UAAW;MAACC,OAAO,EAAEH,MAAM,CAACG,OAAQ;MAACC,SAAS,EAAEJ,MAAM,CAACI,SAAU;MAACC,QAAQ,EAAEL,MAAM,CAACK,QAAS;MAACC,SAAS,EAAGN,MAAM,CAACO,QAAS;MAACC,MAAM,EAAER,MAAM,CAACQ,MAAO;MAACC,CAAC;IAAA,GAAtMT,MAAM,CAACC,IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4L,CACpO;EAAC,gBAEJ,CAAC;AAGP,CAAC;AAAApC,EAAA,CAjCFD,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAkCX,eAAeA,aAAa;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}