{"ast":null,"code":"var _jsxFileName = \"/home/keanu/Downloads/projects/SWAPI/src/components/PeopleDetails.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CardDetails from './CardDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PeopleDetails = () => {\n  _s();\n  const [peopleData, setPeopleData] = useState([]);\n  const [error, setError] = useState(null);\n  // const totalPerson =10;\n  const mydata = peopleData;\n  useEffect(() => {\n    fetch('https://swapi.dev/api/people/').then(response => {\n      if (!response.ok) {\n        throw new Error(\"Could not connect to the server\");\n      }\n      return response.json();\n    }).then(data => setPeopleData(data.results)).catch(error => setError(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: peopleData.map(people => /*#__PURE__*/_jsxDEV(CardDetails, {\n      classNAME: \"flex\",\n      name: people.name,\n      homeworld: people.homeworld\n    }, people.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n_s(PeopleDetails, \"ChEOiBeg4zG0Opb+OHcyfStCNCA=\");\n_c = PeopleDetails;\nexport default PeopleDetails;\nvar _c;\n$RefreshReg$(_c, \"PeopleDetails\");","map":{"version":3,"names":["useEffect","useState","CardDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","PeopleDetails","_s","peopleData","setPeopleData","error","setError","mydata","fetch","then","response","ok","Error","json","data","results","catch","children","map","people","classNAME","name","homeworld","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/keanu/Downloads/projects/SWAPI/src/components/PeopleDetails.js"],"sourcesContent":["import { useEffect, useState} from \"react\";\nimport CardDetails from './CardDetails';\n const PeopleDetails = () =>{\n\n    const [peopleData, setPeopleData] = useState([]);\n    const [error, setError] = useState(null);\n    // const totalPerson =10;\n        const mydata =peopleData;\n\n        useEffect( () =>\n        {\n            fetch('https://swapi.dev/api/people/')\n            .then (response => {\n                if(!response.ok){\n                    throw new Error (\"Could not connect to the server\");\n                }\n                return response.json();\n\n            })\n            .then(data => setPeopleData(data.results)) \n            \n            .catch (error => setError(error));\n\n        },[]);\n        return(\n            <>\n                {peopleData.map((people) => (\n                \n                    <CardDetails classNAME=\"flex\" key={people.name} name={people.name} homeworld={people.homeworld} />\n                ))}\n           \n            </>\n        );\n        \n        }\n         export default PeopleDetails"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACvC,MAAMC,aAAa,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC;EACI,MAAMY,MAAM,GAAEJ,UAAU;EAExBT,SAAS,CAAE,MACX;IACIc,KAAK,CAAC,+BAA+B,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAI;MACf,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAE,iCAAiC,CAAC;MACvD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAE1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIV,aAAa,CAACU,IAAI,CAACC,OAAO,CAAC,CAAC,CAEzCC,KAAK,CAAEX,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAAC,CAAC;EAErC,CAAC,EAAC,EAAE,CAAC;EACL,oBACIP,OAAA,CAAAE,SAAA;IAAAiB,QAAA,EACKd,UAAU,CAACe,GAAG,CAAEC,MAAM,iBAEnBrB,OAAA,CAACF,WAAW;MAACwB,SAAS,EAAC,MAAM;MAAmBC,IAAI,EAAEF,MAAM,CAACE,IAAK;MAACC,SAAS,EAAEH,MAAM,CAACG;IAAU,GAA5DH,MAAM,CAACE,IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmD,CACpG;EAAC,gBAEJ,CAAC;AAGP,CAAC;AAAAxB,EAAA,CAhCFD,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAiCX,eAAeA,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}